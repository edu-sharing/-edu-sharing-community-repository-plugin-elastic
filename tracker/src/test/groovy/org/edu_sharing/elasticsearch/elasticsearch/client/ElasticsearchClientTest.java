package org.edu_sharing.elasticsearch.elasticsearch.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import org.apache.lucene.search.TotalHits;
import org.edu_sharing.elasticsearch.alfresco.client.*;
import org.edu_sharing.elasticsearch.tools.ScriptExecutor;
import org.edu_sharing.repository.client.tools.CCConstants;
import org.elasticsearch.client.RestHighLevelClient;
import org.elasticsearch.common.Strings;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.text.Text;
import org.elasticsearch.common.xcontent.XContentBuilder;
import org.elasticsearch.common.xcontent.XContentFactory;
import org.elasticsearch.core.Set;
import org.elasticsearch.script.Script;
import org.elasticsearch.search.SearchHit;
import org.elasticsearch.search.SearchHits;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentMatchers;
import org.mockito.Mockito;

import java.io.IOException;
import java.io.Serializable;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

class ElasticsearchClientTest {

    private ElasticsearchClient underTest;

    private static String indentJson(String json) {
        JsonParser parser = new JsonParser();
        Gson gson = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();
        JsonElement el = parser.parse(json);
        return gson.toJson(el);
    }

    @BeforeEach
    void setUp() throws Exception {
        ScriptExecutor scriptExecutorMock = Mockito.mock(ScriptExecutor.class);
        AlfrescoWebscriptClient alfrescoClientMock = Mockito.mock(AlfrescoWebscriptClient.class);
        RestHighLevelClient restHighLevelClientMock = Mockito.mock(RestHighLevelClient.class);
        underTest = Mockito.spy(new ElasticsearchClient());
        underTest.scriptExecutor = scriptExecutorMock;
        underTest.alfrescoClient = alfrescoClientMock;
        underTest.client = restHighLevelClientMock;
        underTest.homeRepoId = "local";
    }

    @Test
    void addDynamicMappingsTest() throws IOException {
        XContentBuilder builder = XContentFactory.jsonBuilder();
        builder.startObject();
        underTest.addDynamicMappings(builder);
        builder.endObject();
        assertEquals("{\n  \"dynamic\": true,\n  \"numeric_detection\": true,\n  \"dynamic_templates\": [\n    {\n      \"aggregated_type\": {\n        \"match_mapping_type\": \"string\",\n        \"path_match\": \"properties_aggregated.*\",\n        \"mapping\": {\n          \"type\": \"keyword\",\n          \"store\": true,\n          \"ignore_above\": 256\n        }\n      }\n    },\n    {\n      \"convert_date\": {\n        \"match_mapping_type\": \"date\",\n        \"path_match\": \"*properties.*\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"store\": true,\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"date\": {\n              \"type\": \"date\",\n              \"ignore_malformed\": true\n            }\n          }\n        }\n      }\n    },\n    {\n      \"convert_numeric_long\": {\n        \"match_mapping_type\": \"long\",\n        \"path_match\": \"*properties.*\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"store\": true,\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"number\": {\n              \"type\": \"long\",\n              \"ignore_malformed\": true\n            }\n          }\n        }\n      }\n    },\n    {\n      \"convert_numeric_double\": {\n        \"match_mapping_type\": \"double\",\n        \"path_match\": \"*properties.*\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"store\": true,\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"number\": {\n              \"type\": \"float\",\n              \"ignore_malformed\": true\n            }\n          }\n        }\n      }\n    },\n    {\n      \"convert_date_aggregated\": {\n        \"match_mapping_type\": \"date\",\n        \"path_match\": \"*properties_aggregated.*\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"store\": true,\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"date\": {\n              \"type\": \"date\",\n              \"ignore_malformed\": true\n            }\n          }\n        }\n      }\n    },\n    {\n      \"convert_numeric_long_aggregated\": {\n        \"match_mapping_type\": \"long\",\n        \"path_match\": \"*properties_aggregated.*\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"store\": true,\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"number\": {\n              \"type\": \"long\",\n              \"ignore_malformed\": true\n            }\n          }\n        }\n      }\n    },\n    {\n      \"convert_numeric_double_aggregated\": {\n        \"match_mapping_type\": \"double\",\n        \"path_match\": \"*properties_aggregated.*\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"store\": true,\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"number\": {\n              \"type\": \"float\",\n              \"ignore_malformed\": true\n            }\n          }\n        }\n      }\n    },\n    {\n      \"copy_facettes\": {\n        \"path_match\": \"*properties.*\",\n        \"match_mapping_type\": \"string\",\n        \"mapping\": {\n          \"type\": \"text\",\n          \"copy_to\": \"properties_aggregated.{name}\",\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            }\n          }\n        }\n      }\n    },\n    {\n      \"statistics_rating\": {\n        \"path_match\": \"statistic_RATING_*\",\n        \"mapping\": {\n          \"type\": \"float\"\n        }\n      }\n    },\n    {\n      \"statistics_generic\": {\n        \"path_match\": \"statistic_*\",\n        \"mapping\": {\n          \"type\": \"long\"\n        }\n      }\n    }\n  ]\n}", indentJson(Strings.toString(builder)));
    }

    @Test
    void addMappingsTest() throws Exception {
        XContentBuilder builder = XContentFactory.jsonBuilder();
        builder.startObject();
        underTest.addMappings(builder);
        builder.endObject();
        assertEquals("{\n  \"properties\": {\n    \"aclId\": {\n      \"type\": \"long\"\n    },\n    \"txnId\": {\n      \"type\": \"long\"\n    },\n    \"dbid\": {\n      \"type\": \"long\"\n    },\n    \"parentRef\": {\n      \"properties\": {\n        \"storeRef\": {\n          \"properties\": {\n            \"protocol\": {\n              \"type\": \"keyword\"\n            },\n            \"identifier\": {\n              \"type\": \"keyword\"\n            }\n          }\n        },\n        \"id\": {\n          \"type\": \"keyword\"\n        }\n      }\n    },\n    \"nodeRef\": {\n      \"properties\": {\n        \"storeRef\": {\n          \"properties\": {\n            \"protocol\": {\n              \"type\": \"keyword\"\n            },\n            \"identifier\": {\n              \"type\": \"keyword\"\n            }\n          }\n        },\n        \"id\": {\n          \"type\": \"keyword\"\n        }\n      }\n    },\n    \"owner\": {\n      \"type\": \"keyword\"\n    },\n    \"type\": {\n      \"type\": \"keyword\"\n    },\n    \"path\": {\n      \"type\": \"keyword\"\n    },\n    \"fullpath\": {\n      \"type\": \"keyword\"\n    },\n    \"permissions\": {\n      \"properties\": {\n        \"read\": {\n          \"type\": \"keyword\"\n        }\n      }\n    },\n    \"content\": {\n      \"properties\": {\n        \"fulltext\": {\n          \"type\": \"text\"\n        },\n        \"contentId\": {\n          \"type\": \"long\"\n        },\n        \"size\": {\n          \"type\": \"long\"\n        },\n        \"encoding\": {\n          \"type\": \"keyword\"\n        },\n        \"locale\": {\n          \"type\": \"keyword\"\n        },\n        \"mimetype\": {\n          \"type\": \"keyword\"\n        }\n      }\n    },\n    \"properties\": {\n      \"properties\": {\n        \"ccm:original\": {\n          \"type\": \"keyword\"\n        },\n        \"cclom:location\": {\n          \"type\": \"keyword\"\n        },\n        \"sys:node-uuid\": {\n          \"type\": \"keyword\"\n        },\n        \"cclom:format\": {\n          \"type\": \"keyword\"\n        },\n        \"cm:versionLabel\": {\n          \"type\": \"keyword\"\n        },\n        \"cclom:title\": {\n          \"type\": \"text\",\n          \"fields\": {\n            \"keyword\": {\n              \"type\": \"keyword\",\n              \"ignore_above\": 256\n            },\n            \"trigram\": {\n              \"type\": \"text\",\n              \"analyzer\": \"trigram\"\n            },\n            \"reverse\": {\n              \"type\": \"text\",\n              \"analyzer\": \"reverse\"\n            }\n          },\n          \"copy_to\": [\n            \"properties_aggregated.cclom:title\"\n          ]\n        }\n      }\n    },\n    \"children\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"keyword\"\n        },\n        \"aspects\": {\n          \"type\": \"keyword\"\n        },\n        \"content\": {\n          \"properties\": {\n            \"fulltext\": {\n              \"type\": \"text\"\n            },\n            \"contentId\": {\n              \"type\": \"long\"\n            },\n            \"size\": {\n              \"type\": \"long\"\n            },\n            \"encoding\": {\n              \"type\": \"keyword\"\n            },\n            \"locale\": {\n              \"type\": \"keyword\"\n            },\n            \"mimetype\": {\n              \"type\": \"keyword\"\n            }\n          }\n        }\n      }\n    },\n    \"aspects\": {\n      \"type\": \"keyword\"\n    },\n    \"collections\": {\n      \"properties\": {\n        \"dbid\": {\n          \"type\": \"long\"\n        },\n        \"aclId\": {\n          \"type\": \"long\"\n        }\n      }\n    },\n    \"preview\": {\n      \"properties\": {\n        \"mimetype\": {\n          \"type\": \"keyword\"\n        },\n        \"type\": {\n          \"type\": \"keyword\"\n        },\n        \"icon\": {\n          \"type\": \"boolean\"\n        },\n        \"small\": {\n          \"type\": \"binary\"\n        }\n      }\n    }\n  }\n}", indentJson(Strings.toString(builder)));
    }
    @Test
    void getIndexSettingsTest() throws Exception {
        Settings.Builder settings = underTest.getIndexSettings();
        assertEquals("{\n  \"analysis\": {\n    \"filter\": {\n      \"shingle\": {\n        \"max_shingle_size\": \"3\",\n        \"min_shingle_size\": \"2\",\n        \"type\": \"shingle\"\n      }\n    },\n    \"analyzer\": {\n      \"reverse\": {\n        \"filter\": [\n          \"lowercase\",\n          \"reverse\"\n        ],\n        \"type\": \"custom\",\n        \"tokenizer\": \"standard\"\n      },\n      \"trigram\": {\n        \"filter\": [\n          \"lowercase\",\n          \"shingle\"\n        ],\n        \"type\": \"custom\",\n        \"tokenizer\": \"standard\"\n      }\n    }\n  },\n  \"index\": {\n    \"number_of_shards\": \"0\",\n    \"number_of_replicas\": \"0\"\n  }\n}", indentJson(Strings.toString(settings.build())));
    }

    @Test
    void getTest() throws Exception {
        XContentBuilder builder = XContentFactory.jsonBuilder();
        NodeData data = getNodeDataDummy(NodeData.class);
        underTest.get(data, builder, null);
        assertEquals("{\n  \"aclId\": 54321,\n  \"txnId\": 4321,\n  \"dbid\": 654321,\n  \"parentRef\": {\n    \"storeRef\": {\n      \"protocol\": \"workspace\",\n      \"identifier\": \"SpacesStore\"\n    },\n    \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n  },\n  \"nodeRef\": {\n    \"storeRef\": {\n      \"protocol\": \"workspace\",\n      \"identifier\": \"SpacesStore\"\n    },\n    \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n  },\n  \"type\": \"ccm:io\",\n  \"i18n\": {\n    \"de\": {\n      \"cclom:learningresourcetype\": [\n        \"LRT Test Translation DE\"\n      ]\n    },\n    \"en\": {\n      \"cclom:learningresourcetype\": [\n        \"LRT Test Translation EN\"\n      ]\n    }\n  },\n  \"path\": [],\n  \"fullpath\": \"\",\n  \"permissions\": {\n    \"read\": [\n      \"tester\"\n    ],\n    \"Coordinator\": [\n      \"tester\"\n    ]\n  },\n  \"content\": {\n    \"contentId\": \"contentId\",\n    \"encoding\": \"encoding\",\n    \"locale\": \"locale\",\n    \"mimetype\": \"mimetype\",\n    \"size\": \"1337\"\n  },\n  \"properties\": {\n    \"cclom:general_keyword\": \"\",\n    \"cm:content\": {\n      \"contentId\": \"contentId\",\n      \"encoding\": \"encoding\",\n      \"locale\": \"locale\",\n      \"mimetype\": \"mimetype\",\n      \"size\": \"1337\"\n    },\n    \"cm:name\": \"Test\",\n    \"ccm:mediacenter_sort\": {\n      \"GROUP_MEDIA_CENTER_001\": {\n        \"activated\": \"true\"\n      }\n    },\n    \"ccm:mediacenter\": [\n      {\n        \"name\": \"GROUP_MEDIA_CENTER_001\",\n        \"activated\": \"true\"\n      }\n    ],\n    \"ccm:lifecyclecontributer_author\": [\n      \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n    ],\n    \"cclom:learningresourcetype\": \"LRT_TEST\",\n    \"sys:node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n  },\n  \"contributor\": [\n    {\n      \"property\": \"ccm:lifecyclecontributer_author\",\n      \"firstname\": \"Firstname\",\n      \"lastname\": \"Lastname\",\n      \"email\": \"foo@email.com\",\n      \"url\": \"http://website.com\",\n      \"org\": \"CompanyName\",\n      \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n    }\n  ],\n  \"preview\": {\n    \"mimetype\": \"image/jpeg\",\n    \"type\": \"USERDEFINED\",\n    \"icon\": false,\n    \"small\": \"/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wgARCAAIABQDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAAAf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAAAUQP/8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABBQJ//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAwEBPwF//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAgEBPwF//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQAGPwJ//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABPyF//9oADAMBAAIAAwAAABCCf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQIBAT8Qf//EABgQAAIDAAAAAAAAAAAAAAAAAAARARDh/9oACAEBAAE/EIeUz//Z\"\n  },\n  \"children\": [\n    {\n      \"aclId\": 0,\n      \"txnId\": 0,\n      \"dbid\": 0,\n      \"parentRef\": {\n        \"storeRef\": {\n          \"protocol\": \"workspace\",\n          \"identifier\": \"SpacesStore\"\n        },\n        \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"nodeRef\": {\n        \"storeRef\": {\n          \"protocol\": \"workspace\",\n          \"identifier\": \"SpacesStore\"\n        },\n        \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"type\": \"ccm:rating\",\n      \"path\": [],\n      \"fullpath\": \"\",\n      \"permissions\": {\n        \"read\": [\n          \"tester\"\n        ],\n        \"Coordinator\": [\n          \"tester\"\n        ]\n      },\n      \"properties\": {\n        \"cm:modified\": 1672527600000,\n        \"ccm:rating_value\": \"5.0\"\n      }\n    }\n  ],\n  \"statistic_RATING_2023-01-01\": 5.0,\n  \"statistic_RATING_null\": 5.0\n}", indentJson(Strings.toString(builder)));

    }
    @Test
    void getProposalDataTest() throws Exception {
        XContentBuilder builder = XContentFactory.jsonBuilder();
        NodeDataProposal data = getNodeDataDummy(NodeDataProposal.class);
        data.setCollection(getNodeDataDummy(NodeData.class));
        data.setOriginal(getNodeDataDummy(NodeData.class));
        underTest.get(data, builder, null);
        assertEquals("{\n  \"aclId\": 54321,\n  \"txnId\": 4321,\n  \"dbid\": 654321,\n  \"parentRef\": {\n    \"storeRef\": {\n      \"protocol\": \"workspace\",\n      \"identifier\": \"SpacesStore\"\n    },\n    \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n  },\n  \"nodeRef\": {\n    \"storeRef\": {\n      \"protocol\": \"workspace\",\n      \"identifier\": \"SpacesStore\"\n    },\n    \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n  },\n  \"type\": \"ccm:io\",\n  \"i18n\": {\n    \"de\": {\n      \"cclom:learningresourcetype\": [\n        \"LRT Test Translation DE\"\n      ]\n    },\n    \"en\": {\n      \"cclom:learningresourcetype\": [\n        \"LRT Test Translation EN\"\n      ]\n    }\n  },\n  \"path\": [],\n  \"fullpath\": \"\",\n  \"permissions\": {\n    \"read\": [\n      \"tester\"\n    ],\n    \"Coordinator\": [\n      \"tester\"\n    ]\n  },\n  \"content\": {\n    \"contentId\": \"contentId\",\n    \"encoding\": \"encoding\",\n    \"locale\": \"locale\",\n    \"mimetype\": \"mimetype\",\n    \"size\": \"1337\"\n  },\n  \"properties\": {\n    \"cclom:general_keyword\": \"\",\n    \"cm:content\": {\n      \"contentId\": \"contentId\",\n      \"encoding\": \"encoding\",\n      \"locale\": \"locale\",\n      \"mimetype\": \"mimetype\",\n      \"size\": \"1337\"\n    },\n    \"cm:name\": \"Test\",\n    \"ccm:mediacenter_sort\": {\n      \"GROUP_MEDIA_CENTER_001\": {\n        \"activated\": \"true\"\n      }\n    },\n    \"ccm:mediacenter\": [\n      {\n        \"name\": \"GROUP_MEDIA_CENTER_001\",\n        \"activated\": \"true\"\n      }\n    ],\n    \"ccm:lifecyclecontributer_author\": [\n      \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n    ],\n    \"cclom:learningresourcetype\": \"LRT_TEST\",\n    \"sys:node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n  },\n  \"contributor\": [\n    {\n      \"property\": \"ccm:lifecyclecontributer_author\",\n      \"firstname\": \"Firstname\",\n      \"lastname\": \"Lastname\",\n      \"email\": \"foo@email.com\",\n      \"url\": \"http://website.com\",\n      \"org\": \"CompanyName\",\n      \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n    }\n  ],\n  \"preview\": {\n    \"mimetype\": \"image/jpeg\",\n    \"type\": \"USERDEFINED\",\n    \"icon\": false,\n    \"small\": \"/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wgARCAAIABQDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAAAf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAAAUQP/8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABBQJ//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAwEBPwF//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAgEBPwF//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQAGPwJ//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABPyF//9oADAMBAAIAAwAAABCCf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQIBAT8Qf//EABgQAAIDAAAAAAAAAAAAAAAAAAARARDh/9oACAEBAAE/EIeUz//Z\"\n  },\n  \"children\": [\n    {\n      \"aclId\": 0,\n      \"txnId\": 0,\n      \"dbid\": 0,\n      \"parentRef\": {\n        \"storeRef\": {\n          \"protocol\": \"workspace\",\n          \"identifier\": \"SpacesStore\"\n        },\n        \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"nodeRef\": {\n        \"storeRef\": {\n          \"protocol\": \"workspace\",\n          \"identifier\": \"SpacesStore\"\n        },\n        \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"type\": \"ccm:rating\",\n      \"path\": [],\n      \"fullpath\": \"\",\n      \"permissions\": {\n        \"read\": [\n          \"tester\"\n        ],\n        \"Coordinator\": [\n          \"tester\"\n        ]\n      },\n      \"properties\": {\n        \"cm:modified\": 1672527600000,\n        \"ccm:rating_value\": \"5.0\"\n      }\n    }\n  ],\n  \"statistic_RATING_2023-01-01\": 5.0,\n  \"statistic_RATING_null\": 5.0,\n  \"collections\": [\n    {\n      \"aclId\": 54321,\n      \"txnId\": 4321,\n      \"dbid\": 654321,\n      \"parentRef\": {\n        \"storeRef\": {\n          \"protocol\": \"workspace\",\n          \"identifier\": \"SpacesStore\"\n        },\n        \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"nodeRef\": {\n        \"storeRef\": {\n          \"protocol\": \"workspace\",\n          \"identifier\": \"SpacesStore\"\n        },\n        \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"type\": \"ccm:io\",\n      \"i18n\": {\n        \"de\": {\n          \"cclom:learningresourcetype\": [\n            \"LRT Test Translation DE\"\n          ]\n        },\n        \"en\": {\n          \"cclom:learningresourcetype\": [\n            \"LRT Test Translation EN\"\n          ]\n        }\n      },\n      \"path\": [],\n      \"fullpath\": \"\",\n      \"permissions\": {\n        \"read\": [\n          \"tester\"\n        ],\n        \"Coordinator\": [\n          \"tester\"\n        ]\n      },\n      \"content\": {\n        \"contentId\": \"contentId\",\n        \"encoding\": \"encoding\",\n        \"locale\": \"locale\",\n        \"mimetype\": \"mimetype\",\n        \"size\": \"1337\"\n      },\n      \"properties\": {\n        \"cclom:general_keyword\": \"\",\n        \"cm:content\": {\n          \"contentId\": \"contentId\",\n          \"encoding\": \"encoding\",\n          \"locale\": \"locale\",\n          \"mimetype\": \"mimetype\",\n          \"size\": \"1337\"\n        },\n        \"cm:name\": \"Test\",\n        \"ccm:mediacenter_sort\": {\n          \"GROUP_MEDIA_CENTER_001\": {\n            \"activated\": \"true\"\n          }\n        },\n        \"ccm:mediacenter\": [\n          {\n            \"name\": \"GROUP_MEDIA_CENTER_001\",\n            \"activated\": \"true\"\n          }\n        ],\n        \"ccm:lifecyclecontributer_author\": [\n          \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n        ],\n        \"cclom:learningresourcetype\": \"LRT_TEST\",\n        \"sys:node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"contributor\": [\n        {\n          \"property\": \"ccm:lifecyclecontributer_author\",\n          \"firstname\": \"Firstname\",\n          \"lastname\": \"Lastname\",\n          \"email\": \"foo@email.com\",\n          \"url\": \"http://website.com\",\n          \"org\": \"CompanyName\",\n          \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n        }\n      ],\n      \"preview\": {\n        \"mimetype\": \"image/jpeg\",\n        \"type\": \"USERDEFINED\",\n        \"icon\": false,\n        \"small\": \"/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wgARCAAIABQDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAAAf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAAAUQP/8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABBQJ//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAwEBPwF//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAgEBPwF//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQAGPwJ//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABPyF//9oADAMBAAIAAwAAABCCf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQIBAT8Qf//EABgQAAIDAAAAAAAAAAAAAAAAAAARARDh/9oACAEBAAE/EIeUz//Z\"\n      },\n      \"children\": [\n        {\n          \"aclId\": 0,\n          \"txnId\": 0,\n          \"dbid\": 0,\n          \"parentRef\": {\n            \"storeRef\": {\n              \"protocol\": \"workspace\",\n              \"identifier\": \"SpacesStore\"\n            },\n            \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n          },\n          \"nodeRef\": {\n            \"storeRef\": {\n              \"protocol\": \"workspace\",\n              \"identifier\": \"SpacesStore\"\n            },\n            \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n          },\n          \"type\": \"ccm:rating\",\n          \"path\": [],\n          \"fullpath\": \"\",\n          \"permissions\": {\n            \"read\": [\n              \"tester\"\n            ],\n            \"Coordinator\": [\n              \"tester\"\n            ]\n          },\n          \"properties\": {\n            \"cm:modified\": 1672527600000,\n            \"ccm:rating_value\": \"5.0\"\n          }\n        }\n      ],\n      \"statistic_RATING_2023-01-01\": 5.0,\n      \"statistic_RATING_null\": 5.0\n    }\n  ],\n  \"original\": {\n    \"aclId\": 54321,\n    \"txnId\": 4321,\n    \"dbid\": 654321,\n    \"parentRef\": {\n      \"storeRef\": {\n        \"protocol\": \"workspace\",\n        \"identifier\": \"SpacesStore\"\n      },\n      \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n    },\n    \"nodeRef\": {\n      \"storeRef\": {\n        \"protocol\": \"workspace\",\n        \"identifier\": \"SpacesStore\"\n      },\n      \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n    },\n    \"type\": \"ccm:io\",\n    \"i18n\": {\n      \"de\": {\n        \"cclom:learningresourcetype\": [\n          \"LRT Test Translation DE\"\n        ]\n      },\n      \"en\": {\n        \"cclom:learningresourcetype\": [\n          \"LRT Test Translation EN\"\n        ]\n      }\n    },\n    \"path\": [],\n    \"fullpath\": \"\",\n    \"permissions\": {\n      \"read\": [\n        \"tester\"\n      ],\n      \"Coordinator\": [\n        \"tester\"\n      ]\n    },\n    \"content\": {\n      \"contentId\": \"contentId\",\n      \"encoding\": \"encoding\",\n      \"locale\": \"locale\",\n      \"mimetype\": \"mimetype\",\n      \"size\": \"1337\"\n    },\n    \"properties\": {\n      \"cclom:general_keyword\": \"\",\n      \"cm:content\": {\n        \"contentId\": \"contentId\",\n        \"encoding\": \"encoding\",\n        \"locale\": \"locale\",\n        \"mimetype\": \"mimetype\",\n        \"size\": \"1337\"\n      },\n      \"cm:name\": \"Test\",\n      \"ccm:mediacenter_sort\": {\n        \"GROUP_MEDIA_CENTER_001\": {\n          \"activated\": \"true\"\n        }\n      },\n      \"ccm:mediacenter\": [\n        {\n          \"name\": \"GROUP_MEDIA_CENTER_001\",\n          \"activated\": \"true\"\n        }\n      ],\n      \"ccm:lifecyclecontributer_author\": [\n        \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n      ],\n      \"cclom:learningresourcetype\": \"LRT_TEST\",\n      \"sys:node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n    },\n    \"contributor\": [\n      {\n        \"property\": \"ccm:lifecyclecontributer_author\",\n        \"firstname\": \"Firstname\",\n        \"lastname\": \"Lastname\",\n        \"email\": \"foo@email.com\",\n        \"url\": \"http://website.com\",\n        \"org\": \"CompanyName\",\n        \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n      }\n    ],\n    \"preview\": {\n      \"mimetype\": \"image/jpeg\",\n      \"type\": \"USERDEFINED\",\n      \"icon\": false,\n      \"small\": \"/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wgARCAAIABQDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAAAf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAAAUQP/8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABBQJ//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAwEBPwF//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAgEBPwF//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQAGPwJ//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABPyF//9oADAMBAAIAAwAAABCCf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQIBAT8Qf//EABgQAAIDAAAAAAAAAAAAAAAAAAARARDh/9oACAEBAAE/EIeUz//Z\"\n    },\n    \"children\": [\n      {\n        \"aclId\": 0,\n        \"txnId\": 0,\n        \"dbid\": 0,\n        \"parentRef\": {\n          \"storeRef\": {\n            \"protocol\": \"workspace\",\n            \"identifier\": \"SpacesStore\"\n          },\n          \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n        },\n        \"nodeRef\": {\n          \"storeRef\": {\n            \"protocol\": \"workspace\",\n            \"identifier\": \"SpacesStore\"\n          },\n          \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n        },\n        \"type\": \"ccm:rating\",\n        \"path\": [],\n        \"fullpath\": \"\",\n        \"permissions\": {\n          \"read\": [\n            \"tester\"\n          ],\n          \"Coordinator\": [\n            \"tester\"\n          ]\n        },\n        \"properties\": {\n          \"cm:modified\": 1672527600000,\n          \"ccm:rating_value\": \"5.0\"\n        }\n      }\n    ],\n    \"statistic_RATING_2023-01-01\": 5.0,\n    \"statistic_RATING_null\": 5.0\n  }\n}", indentJson(Strings.toString(builder)));

    }
    @Test
    void updatePermissionsTest() throws Exception {
        Map<String, List<String>> permissions = new HashMap<String, List<String>>() {{
            put("read", Arrays.asList("user1", "user2"));
            put("write", Arrays.asList("user3", "user4"));
        }};
        Mockito.doNothing().when(underTest).update(ArgumentMatchers.anyLong(), ArgumentMatchers.any(Script.class));
        Mockito.doNothing().when(underTest).update(ArgumentMatchers.anyLong(), ArgumentMatchers.any(XContentBuilder.class));
        XContentBuilder builder = underTest.updatePermissions(123, permissions);
        assertEquals("{\n  \"permissions\": {\n    \"read\": [\n      \"user1\",\n      \"user2\"\n    ],\n    \"write\": [\n      \"user3\",\n      \"user4\"\n    ]\n  }\n}", indentJson(Strings.toString(builder)));
    }
    @Test
    void indexCollectionsTest() throws Exception {
        try {
            NodeData data = getNodeDataDummy(NodeData.class);
            XContentBuilder builder = underTest.indexCollections(data.getNodeMetadata());
            fail();
        } catch(IOException e) {
            assertEquals("wrong type:ccm:io", e.getMessage());
        }

        // no collections to index test
        NodeData data = getNodeDataDummy(NodeData.class);
        data.getNodeMetadata().setType("ccm:usage");
        data.getNodeMetadata().getProperties().put("{http://www.campuscontent.de/model/1.0}usageappid", "local");
        data.getNodeMetadata().getProperties().put("{http://www.campuscontent.de/model/1.0}usagecourseid", "0192f8a9-374d-41f3-9025-83e8f75c8717");
        data.getNodeMetadata().getProperties().put("{http://www.campuscontent.de/model/1.0}usageparentnodeid", "0192f8a9-374d-41f3-9025-83e8f75c8717");
        Mockito.doReturn(null).when(underTest).search(ArgumentMatchers.anyString(), ArgumentMatchers.any(), ArgumentMatchers.anyInt(), ArgumentMatchers.anyInt());
        XContentBuilder builder = underTest.indexCollections(data.getNodeMetadata());
        assertNull(builder);


        // collections to index test
        data = getNodeDataDummy(NodeData.class);
        data.getNodeMetadata().setType("ccm:usage");
        data.getNodeMetadata().getProperties().put("{http://www.campuscontent.de/model/1.0}usageappid", "local");
        data.getNodeMetadata().getProperties().put("{http://www.campuscontent.de/model/1.0}usagecourseid", "0192f8a9-374d-41f3-9025-83e8f75c8717");
        data.getNodeMetadata().getProperties().put("{http://www.campuscontent.de/model/1.0}usageparentnodeid", "0192f8a9-374d-41f3-9025-83e8f75c8717");
        SearchHit hit = Mockito.spy(new SearchHit(1, "1", new Text("node"), Collections.emptyMap(), Collections.emptyMap()));
        Mockito.doReturn(new HashMap<String, Object>() {{
            put("dbid", "123");
            put("properties", getDummyProperties("0192f8a9-374d-41f3-9025-83e8f75c8717"));
            put("collections", Collections.singletonList(
                            new HashMap<String, Object>() {{
                                put("dbid", "123");
                                put("relation", new HashMap<String, Object>() {{
                                    put("dbid", 123);
                                }});
                                put("properties", getDummyProperties("0192f8a9-374d-41f3-9025-83e8f75c8717"));
                            }}
                    )
            );
        }}).when(hit).getSourceAsMap();
        Mockito.when(underTest.alfrescoClient.getNodeData(ArgumentMatchers.anyList()))
                .thenReturn(Collections.singletonList(getNodeDataDummy(NodeData.class)));
        Mockito.doReturn(new SearchHits(new SearchHit[]{hit}, new TotalHits(1, TotalHits.Relation.EQUAL_TO), 1)).when(underTest).search(ArgumentMatchers.anyString(), ArgumentMatchers.any(), ArgumentMatchers.anyInt(), ArgumentMatchers.anyInt());
        Mockito.doNothing().when(underTest).update(ArgumentMatchers.anyLong(), ArgumentMatchers.any(XContentBuilder.class));
        Mockito.doNothing().when(underTest).refresh(ArgumentMatchers.anyString());
        builder = underTest.indexCollections(data.getNodeMetadata());
        assertEquals("{\n  \"collections\": [\n    {\n      \"dbid\": \"123\",\n      \"properties\": {\n        \"{http://www.campuscontent.de/model/lom/1.0}general_keyword\": [\n          [\n            {\n              \"\": \"Key a\"\n            }\n          ],\n          [\n            {\n              \"\": \"Key b\"\n            }\n          ]\n        ],\n        \"{http://www.alfresco.org/model/content/1.0}content\": {\n          \"contentId\": \"contentId\",\n          \"encoding\": \"encoding\",\n          \"locale\": \"locale\",\n          \"mimetype\": \"mimetype\",\n          \"size\": \"1337\"\n        },\n        \"{http://www.alfresco.org/model/content/1.0}name\": \"Test\",\n        \"{http://www.campuscontent.de/model/1.0}mediacenter\": [\n          \"{\\\"name\\\":\\\"GROUP_MEDIA_CENTER_001\\\",\\\"activated\\\": true}\"\n        ],\n        \"{http://www.campuscontent.de/model/1.0}lifecyclecontributer_author\": [\n          \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n        ],\n        \"{http://www.campuscontent.de/model/lom/1.0}learningresourcetype\": \"LRT_TEST\",\n        \"{http://www.alfresco.org/model/system/1.0}node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"relation\": {\n        \"dbid\": 123\n      }\n    },\n    {\n      \"collections\": [\n        {\n          \"dbid\": \"123\",\n          \"properties\": {\n            \"{http://www.campuscontent.de/model/lom/1.0}general_keyword\": [\n              [\n                {\n                  \"\": \"Key a\"\n                }\n              ],\n              [\n                {\n                  \"\": \"Key b\"\n                }\n              ]\n            ],\n            \"{http://www.alfresco.org/model/content/1.0}content\": {\n              \"contentId\": \"contentId\",\n              \"encoding\": \"encoding\",\n              \"locale\": \"locale\",\n              \"mimetype\": \"mimetype\",\n              \"size\": \"1337\"\n            },\n            \"{http://www.alfresco.org/model/content/1.0}name\": \"Test\",\n            \"{http://www.campuscontent.de/model/1.0}mediacenter\": [\n              \"{\\\"name\\\":\\\"GROUP_MEDIA_CENTER_001\\\",\\\"activated\\\": true}\"\n            ],\n            \"{http://www.campuscontent.de/model/1.0}lifecyclecontributer_author\": [\n              \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n            ],\n            \"{http://www.campuscontent.de/model/lom/1.0}learningresourcetype\": \"LRT_TEST\",\n            \"{http://www.alfresco.org/model/system/1.0}node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n          },\n          \"relation\": {\n            \"dbid\": 123\n          }\n        }\n      ],\n      \"dbid\": \"123\",\n      \"properties\": {\n        \"{http://www.campuscontent.de/model/lom/1.0}general_keyword\": [\n          [\n            {\n              \"\": \"Key a\"\n            }\n          ],\n          [\n            {\n              \"\": \"Key b\"\n            }\n          ]\n        ],\n        \"{http://www.alfresco.org/model/content/1.0}content\": {\n          \"contentId\": \"contentId\",\n          \"encoding\": \"encoding\",\n          \"locale\": \"locale\",\n          \"mimetype\": \"mimetype\",\n          \"size\": \"1337\"\n        },\n        \"{http://www.alfresco.org/model/content/1.0}name\": \"Test\",\n        \"{http://www.campuscontent.de/model/1.0}mediacenter\": [\n          \"{\\\"name\\\":\\\"GROUP_MEDIA_CENTER_001\\\",\\\"activated\\\": true}\"\n        ],\n        \"{http://www.campuscontent.de/model/1.0}lifecyclecontributer_author\": [\n          \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n        ],\n        \"{http://www.campuscontent.de/model/lom/1.0}learningresourcetype\": \"LRT_TEST\",\n        \"{http://www.alfresco.org/model/system/1.0}node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n      },\n      \"relation\": {\n        \"aclId\": 54321,\n        \"txnId\": 4321,\n        \"dbid\": 654321,\n        \"parentRef\": {\n          \"storeRef\": {\n            \"protocol\": \"workspace\",\n            \"identifier\": \"SpacesStore\"\n          },\n          \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n        },\n        \"nodeRef\": {\n          \"storeRef\": {\n            \"protocol\": \"workspace\",\n            \"identifier\": \"SpacesStore\"\n          },\n          \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n        },\n        \"type\": \"ccm:io\",\n        \"i18n\": {\n          \"de\": {\n            \"cclom:learningresourcetype\": [\n              \"LRT Test Translation DE\"\n            ]\n          },\n          \"en\": {\n            \"cclom:learningresourcetype\": [\n              \"LRT Test Translation EN\"\n            ]\n          }\n        },\n        \"path\": [],\n        \"fullpath\": \"\",\n        \"permissions\": {\n          \"read\": [\n            \"tester\"\n          ],\n          \"Coordinator\": [\n            \"tester\"\n          ]\n        },\n        \"content\": {\n          \"contentId\": \"contentId\",\n          \"encoding\": \"encoding\",\n          \"locale\": \"locale\",\n          \"mimetype\": \"mimetype\",\n          \"size\": \"1337\"\n        },\n        \"properties\": {\n          \"cclom:general_keyword\": \"\",\n          \"cm:content\": {\n            \"contentId\": \"contentId\",\n            \"encoding\": \"encoding\",\n            \"locale\": \"locale\",\n            \"mimetype\": \"mimetype\",\n            \"size\": \"1337\"\n          },\n          \"cm:name\": \"Test\",\n          \"ccm:mediacenter_sort\": {\n            \"GROUP_MEDIA_CENTER_001\": {\n              \"activated\": \"true\"\n            }\n          },\n          \"ccm:mediacenter\": [\n            {\n              \"name\": \"GROUP_MEDIA_CENTER_001\",\n              \"activated\": \"true\"\n            }\n          ],\n          \"ccm:lifecyclecontributer_author\": [\n            \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n          ],\n          \"cclom:learningresourcetype\": \"LRT_TEST\",\n          \"sys:node-uuid\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n        },\n        \"contributor\": [\n          {\n            \"property\": \"ccm:lifecyclecontributer_author\",\n            \"firstname\": \"Firstname\",\n            \"lastname\": \"Lastname\",\n            \"email\": \"foo@email.com\",\n            \"url\": \"http://website.com\",\n            \"org\": \"CompanyName\",\n            \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nN:Lastname;Firstname\\nFN:Firstname Lastname\\nORG:CompanyName\\nTITLE:JobTitle\\nADR:;;123 Sesame St;SomeCity;CA;12345;USA\\nTEL;WORK;VOICE:1234567890\\nTEL;CELL:Mobile\\nTEL;FAX:\\nEMAIL;WORK;INTERNET:foo@email.com\\nURL:http://website.com\\nEND:VCARD\"\n          }\n        ],\n        \"preview\": {\n          \"mimetype\": \"image/jpeg\",\n          \"type\": \"USERDEFINED\",\n          \"icon\": false,\n          \"small\": \"/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wgARCAAIABQDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAAAf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAAAUQP/8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABBQJ//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAwEBPwF//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAgEBPwF//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQAGPwJ//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABPyF//9oADAMBAAIAAwAAABCCf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQIBAT8Qf//EABgQAAIDAAAAAAAAAAAAAAAAAAARARDh/9oACAEBAAE/EIeUz//Z\"\n        },\n        \"children\": [\n          {\n            \"aclId\": 0,\n            \"txnId\": 0,\n            \"dbid\": 0,\n            \"parentRef\": {\n              \"storeRef\": {\n                \"protocol\": \"workspace\",\n                \"identifier\": \"SpacesStore\"\n              },\n              \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n            },\n            \"nodeRef\": {\n              \"storeRef\": {\n                \"protocol\": \"workspace\",\n                \"identifier\": \"SpacesStore\"\n              },\n              \"id\": \"0192f8a9-374d-41f3-9025-83e8f75c8717\"\n            },\n            \"type\": \"ccm:rating\",\n            \"path\": [],\n            \"fullpath\": \"\",\n            \"permissions\": {\n              \"read\": [\n                \"tester\"\n              ],\n              \"Coordinator\": [\n                \"tester\"\n              ]\n            },\n            \"properties\": {\n              \"cm:modified\": 1672527600000,\n              \"ccm:rating_value\": \"5.0\"\n            }\n          }\n        ],\n        \"statistic_RATING_2023-01-01\": 5.0,\n        \"statistic_RATING_null\": 5.0\n      }\n    }\n  ]\n}", indentJson(Strings.toString(builder)));
    }
    private static <T extends NodeData> T getNodeDataDummy(Class<T> clazz) throws InstantiationException, IllegalAccessException {
        String nodeId = "0192f8a9-374d-41f3-9025-83e8f75c8717";
        T data = clazz.newInstance();
        NodeData rating = new NodeData();
        rating.setNodeMetadata(new NodeMetadata());
        rating.getNodeMetadata().setNodeRef("workspace://SpacesStore/" + nodeId);
        rating.getNodeMetadata().setType("ccm:rating");
        data.getChildren().add(rating);
        data.setNodeMetadata(new NodeMetadata());
        data.getNodeMetadata().setTxnId(4321);
        data.getNodeMetadata().setType("ccm:io");
        data.getNodeMetadata().setAclId(54321);
        data.getNodeMetadata().setId(654321);
        data.setValueSpaces(new HashMap<String, Map<String, List<String>>>() {{
            put("de-DE", new HashMap<String, List<String>>() {{
                put(CCConstants.LOM_PROP_EDUCATIONAL_LEARNINGRESOURCETYPE, Collections.singletonList("LRT Test Translation DE"));
            }});
            put("en-US", new HashMap<String, List<String>>() {{
                put(CCConstants.LOM_PROP_EDUCATIONAL_LEARNINGRESOURCETYPE, Collections.singletonList("LRT Test Translation EN"));
            }});
        }});
        data.setNodePreview(new NodePreview());
        data.getNodePreview().setIsIcon(false);
        data.getNodePreview().setType("USERDEFINED");
        data.getNodePreview().setMimetype("image/jpeg");
        data.getNodePreview().setSmall(Base64.getDecoder().decode("/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wgARCAAIABQDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAAAf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAAAUQP/8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABBQJ//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAwEBPwF//8QAFBEBAAAAAAAAAAAAAAAAAAAAEP/aAAgBAgEBPwF//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQAGPwJ//8QAFBABAAAAAAAAAAAAAAAAAAAAEP/aAAgBAQABPyF//9oADAMBAAIAAwAAABCCf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAABD/2gAIAQIBAT8Qf//EABgQAAIDAAAAAAAAAAAAAAAAAAARARDh/9oACAEBAAE/EIeUz//Z"));
        data.getNodeMetadata().setNodeRef("workspace://SpacesStore/" + nodeId);
        Path path = new Path();
        path.setPath(nodeId);
        path.setApath(nodeId);
        data.getNodeMetadata().setPaths(Collections.singletonList(path));
        rating.getNodeMetadata().setPaths(Collections.singletonList(path));
        data.getNodeMetadata().setAncestors(Set.of(data.getNodeMetadata().getNodeRef()));
        rating.getNodeMetadata().setAncestors(Set.of(data.getNodeMetadata().getNodeRef()));
        Map<String, Serializable> properties = getDummyProperties(nodeId);
        rating.getNodeMetadata().setProperties(new HashMap<String, Serializable>() {{
            put(CCConstants.CM_PROP_C_MODIFIED, ZonedDateTime.of(
                    2023,1, 1, 0, 0, 0, 0, ZoneId.of("Europe/Berlin")
            ).format(DateTimeFormatter.ISO_INSTANT));
            put(CCConstants.CCM_PROP_RATING_VALUE, "5.0");
        }});
        data.getNodeMetadata().setProperties(properties);
        data.setReader(new Reader());
        rating.setReader(new Reader());
        data.getReader().setReaders(Collections.singletonList("tester"));
        rating.getReader().setReaders(Collections.singletonList("tester"));
        AccessControlList acl = new AccessControlList();
        AccessControlEntry ace = new AccessControlEntry();
        ace.setAuthority("tester");
        ace.setPermission("Coordinator");
        acl.setAces(Collections.singletonList(ace));
        data.setAccessControlList(acl);
        rating.setAccessControlList(acl);
        return data;
    }

    private static Map<String, Serializable> getDummyProperties(String nodeId) {
        return new HashMap<String, Serializable>() {{
            put(CCConstants.CM_NAME, "Test");
            put(CCConstants.LOM_PROP_GENERAL_KEYWORD, (Serializable) Arrays.asList(
                    Collections.singletonList(Collections.singletonMap("", "Key a")),
                    Collections.singletonList(Collections.singletonMap("", "Key b"))
            ));
            put(CCConstants.CCM_PROP_IO_MEDIACENTER, (Serializable) Collections.singletonList("{\"name\":\"GROUP_MEDIA_CENTER_001\",\"activated\": true}"));
            put(CCConstants.LOM_PROP_EDUCATIONAL_LEARNINGRESOURCETYPE, "LRT_TEST");
            put(CCConstants.SYS_PROP_NODE_UID, nodeId);
            put(CCConstants.CCM_PROP_IO_REPL_LIFECYCLECONTRIBUTER_AUTHOR, (Serializable) Collections.singletonList(
                    "BEGIN:VCARD\n" +
                            "VERSION:3.0\n" +
                            "N:Lastname;Firstname\n" +
                            "FN:Firstname Lastname\n" +
                            "ORG:CompanyName\n" +
                            "TITLE:JobTitle\n" +
                            "ADR:;;123 Sesame St;SomeCity;CA;12345;USA\n" +
                            "TEL;WORK;VOICE:1234567890\n" +
                            "TEL;CELL:Mobile\n" +
                            "TEL;FAX:\n" +
                            "EMAIL;WORK;INTERNET:foo@email.com\n" +
                            "URL:http://website.com\n" +
                            "END:VCARD"));
            put("{http://www.alfresco.org/model/content/1.0}content", new LinkedHashMap<String, String>() {{
                put("contentId", "contentId");
                put("encoding", "encoding");
                put("locale", "locale");
                put("mimetype", "mimetype");
                put("size", "1337");
            }});
        }};
    }
}