########################################################################################################################
# GLOBAL
########################################################################################################################

## @section Global parameters
global:

  ## @param global.annotations Define global annotations
  annotations: {}

  cluster:

    istio:
      ## @param global.cluster.istio.enabled Enable Istio Service mesh
      enabled: false

    pdb:
      ## @param global.cluster.pdb.enabled Enable PDB
      enabled: false

  ## @param global.debug Enable global debugging
  debug: false

  image:
    ## @param global.image.pullPolicy Set global image pullPolicy
    pullPolicy: Always
    ## @param global.image.pullSecrets Set global image pullSecrets
    pullSecrets: []
    ## @param global.image.registry Set global image container registry
    registry: ${docker.registry}
    ## @param global.image.repository Set global image container repository
    repository: ${docker.repository}
    ## @param global.image.common Set global image container common
    common: ${docker.common}

  metrics:
    scrape:
      ## @param global.metrics.scrape.interval Set prometheus scrape interval
      interval: 60s
      ## @param global.metrics.scrape.timeout Set prometheus scrape timeout
      timeout: 60s
    servicemonitor:
      ## @param global.metrics.servicemonitor.enabled Enable metrics service monitor
      enabled: false

  ## @param global.password Set global password
  password: ""

  ## @param global.security Set global custom security parameters
  security: {}

########################################################################################################################
# LOCAL
########################################################################################################################

## @section Local parameters
## @param nameOverride Override name
nameOverride: edusharing-repository-search-elastic-tracker

image:
  ## @param image.name Set image name
  name: ${docker.prefix}-deploy-docker-build-tracker
  ## @param image.tag Set image tag
  tag: ${docker.tag}

########################################################################################################################

## @param replicaCount Define amount of parallel replicas to run
replicaCount: 1

########################################################################################################################

service:

  port:
    ## @param service.port.management Set port for service management
    management: 8081

config:

  jvm:
    ram:
      ## @param config.jvm.ram.minPercentage Set minimum memory in percentages
      minPercentage: "90.0"
      ## @param config.jvm.ram.maxPercentage Set maximum memory in percentages
      maxPercentage: "90.0"

  metrics:
    ## @param config.metrics.enabled Enable metrics
    enabled: true
    ## @param config.metrics.relabelings Define relabelings for metrics
    relabelings: []

  ## @param config.override Configure overrides
  override: ""

  repository:

    ## @param config.repository.host Configure repository host
    host: edusharing-repository-service
    ## @param config.repository.port Configure repository port
    port: 8080
    ## @param config.repository.password Configure repository password
    password: ""

  tracker:
    ## @param config.tracker.customScript Configure a custom script for the tracker
    customScript: ""
    ## @param config.tracker.customSynonyms Configure custom synonyms for the tracker
    customSynonyms: ""

  search:

    elastic:
      ## @param config.search.elastic.host Set elasticsearch host
      host: edusharing-repository-search-elastic-index
      ## @param config.search.elastic.port Set elasticsearch port
      port: 9200
      index:
        ## @param config.search.elastic.index.shards Set elasticsearch index shards
        shards: 1
        ## @param config.search.elastic.index.replicas Set elasticsearch index replicas
        replicas: 2

########################################################################################################################

multistage:
  ## @param multistage.enabled Enable multistage
  enabled: false
  ## @param multistage.stages Set stages for multistage
  # e.g.:
  #    - name: blue
  #      spec:
  #        config:
  #          override: ""
  #          tracker:
  #              customScript: ""
  #              customSynonyms: ""
  #    - name: green
  #      spec:
  #        config:
  #          override: ""
  #          tracker:
  #              customScript: ""
  #              customSynonyms: ""
  stages: []


########################################################################################################################

## @param debug Enable debugging
debug: false

########################################################################################################################

## @param nodeAffinity Set node affinity
nodeAffinity: {}

## @param tolerations Set tolerations
tolerations: []

########################################################################################################################

## @param podAnnotations Set custom pod annotations
podAnnotations: {}

podSecurityContext:
  ## @param podSecurityContext.fsGroup Set fs group for access
  fsGroup: 1000
  ## @param podSecurityContext.fsGroupChangePolicy Set change policy for fs group
  fsGroupChangePolicy: OnRootMismatch

securityContext:

  ## @param securityContext.allowPrivilegeEscalation Allow privilege escalation
  allowPrivilegeEscalation: false
  capabilities:
    ## @param securityContext.capabilities.drop Set drop capabilities
    drop:
    - ALL
  ## @param securityContext.runAsUser Define user to run under
  runAsUser: 1000

########################################################################################################################

## @param terminationGracePeriod Define grace period for termination
terminationGracePeriod: 120

startupProbe:
  ## @param startupProbe.failureThreshold Failure threshold for startupProbe
  failureThreshold: 30
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  initialDelaySeconds: 0
  ## @param startupProbe.periodSeconds Period seconds for startupProbe
  periodSeconds: 20
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  successThreshold: 1
  ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
  timeoutSeconds: 10

livenessProbe:
  ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
  failureThreshold: 3
  ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  initialDelaySeconds: 30
  ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
  periodSeconds: 30
  ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  timeoutSeconds: 10

readinessProbe:
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  failureThreshold: 1
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  initialDelaySeconds: 10
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  periodSeconds: 10
  ## @param readinessProbe.successThreshold Set threshold for success on readiness probe
  successThreshold: 1
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  timeoutSeconds: 10

########################################################################################################################

resources:

  limits:
    ## @param resources.limits.cpu Set CPU limit on resources
    cpu: 500m
    ## @param resources.limits.memory Set memory limit on resources
    memory: 2Gi
  requests:
    ## @param resources.requests.cpu Set CPU for requests on resources
    cpu: 500m
    ## @param resources.requests.memory Set memory for requests on resources
    memory: 2Gi

########################################################################################################################

job:

  migration:
    ## @param job.migration.enabled Enable migration job
    enabled: false

    image:
      ## @param job.migration.image.name Set name for migration job image
      name: ${docker.prefix}-deploy-docker-build-tracker
      ## @param job.migration.image.tag Set tag for migration job image
      tag: ${docker.tag}

    ## @param job.migration.podAnnotations Set pod annotations for migration job
    podAnnotations: {}

    ## @param job.migration.startupProbe Optional specs for startupProbe
    startupProbe:

    ## @param job.migration.livenessProbe Optional specs for livenessProbe
    livenessProbe:

    ## @param job.migration.readinessProbe Optional specs for readinessProbe
    readinessProbe:

    resources:

      limits:
        ## @param job.migration.resources.limits.cpu Set CPU limit on resources
        cpu: 500m
        ## @param job.migration.resources.limits.memory Set memory limit on resources
        memory: 2Gi
      requests:
        ## @param job.migration.resources.requests.cpu Set CPU for requests on resources
        cpu: 500m
        ## @param job.migration.resources.requests.memory Set memory for requests on resources
        memory: 2Gi

    securityContext:

      ## @param job.migration.securityContext.runAsUser Set user to run migration job under
      runAsUser: 1000
