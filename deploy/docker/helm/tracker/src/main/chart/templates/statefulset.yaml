apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "edusharing_common_lib.names.name" . }}
  labels: {{ include "edusharing_common_lib.labels.app" . | nindent 4 }}
    {{- if .Values.multistage.enabled }}
    app.kubernetes.io/stage: ""
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{ include "edusharing_common_lib.labels.app" . | nindent 6 }}
      {{- if .Values.multistage.enabled }}
      app.kubernetes.io/stage: ""
      {{- end }}
  serviceName: {{ include "edusharing_common_lib.names.name" . }}-headless
  template:
    metadata:
      labels: {{ include "edusharing_common_lib.labels.app" . | nindent 8 }}
        {{- if .Values.multistage.enabled }}
        app.kubernetes.io/stage: ""
        {{- end }}
      annotations:
        checksum/configmap-env: {{ include (print .Template.BasePath "/configmap-env.yaml") . | sha256sum | trunc 63 }}
        checksum/secret-env: {{ include (print .Template.BasePath "/secret-env.yaml") . | sha256sum | trunc 63 }}
        {{- if .Values.config.tracker.customScript }}
        checksum/script-env: {{ include (print .Template.BasePath "/configmap-script.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
        {{- if .Values.config.tracker.customSynonyms }}
        checksum/synonyms-env: {{ include (print .Template.BasePath "/configmap-synonyms.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
        {{- if not .Values.global.metrics.servicemonitor.enabled }}
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8081"
        prometheus.io/scrape: {{ .Values.config.metrics.enabled | quote }}
        {{- end }}
        sidecar.istio.io/inject: {{ .Values.global.cluster.istio.enabled | quote }}
        {{- with merge .Values.podAnnotations .Values.global.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: {{ include "edusharing_common_lib.names.name" . }}
        image: {{ include "edusharing_common_lib.images.image" . }}{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        {{- if .Values.multistage.enabled }}
        env:
          - name: REPOSITORY_SEARCH_ELASTIC_INDEX_HOST
            value: {{ printf "%s-stage" $.Values.config.search.elastic.host | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "edusharing_common_lib.names.name" . }}-env
        - secretRef:
            name: {{ include "edusharing_common_lib.names.name" . }}-env
        {{- if or (.Values.config.tracker.customScript) (.Values.config.tracker.customSynonyms) }}
        volumeMounts:
        {{- end }}
        {{- if .Values.config.tracker.customScript }}
          - name: script
            mountPath: /opt/alfresco/scripts/script.groovy
            subPath: script.groovy
            readOnly: true
        {{- end }}
        {{- if .Values.config.tracker.customSynonyms }}
          - name: synonyms
            mountPath: /opt/alfresco/synonyms/synonyms.txt
            subPath: synonyms.txt
            readOnly: true
        {{- end }}
        ports:
        - name: management
          containerPort: 8081
        {{- if default .Values.global.debug .Values.debug }}
        - name: jpda
          containerPort: 5005
        {{- end }}
        {{- with .Values.startupProbe }}
        startupProbe:
          httpGet:
            path: /actuator/health/readiness
            port: management
          failureThreshold: {{ .failureThreshold }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: management
          failureThreshold: {{ .failureThreshold }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: management
          failureThreshold: {{ .failureThreshold }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
          timeoutSeconds: {{ .timeoutSeconds }}
        {{- end }}
        {{- with .Values.resources }}
        resources: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext: {{ toYaml . | nindent 10 }}
        {{- end }}
      {{- if .Values.config.tracker.customScript }}
      volumes:
        - configMap:
            name: {{ include "edusharing_common_lib.names.name" . }}-script
          name: script
      {{- end }}
      {{- if .Values.config.tracker.customSynonyms }}
      volumes:
        - configMap:
            name: {{ include "edusharing_common_lib.names.name" . }}-synonyms
          name: synonyms
      {{- end }}
      {{- with .Values.global.image.pullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with merge .Values.podSecurityContext .Values.global.security }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{ with .Values.terminationGracePeriod }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.nodeAffinity }}
      affinity:
        nodeAffinity: {{ toYaml . | nindent 10 }}
      {{- end }}
{{- if .Values.multistage.enabled }}
{{- range .Values.multistage.stages }}
{{ $stage := printf "%s-stage-%s" (include "edusharing_common_lib.names.name" $) .name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $stage }}
  labels: {{ include "edusharing_common_lib.labels.app" $ | nindent 4 }}
    app.kubernetes.io/stage: {{ .name }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels: {{ include "edusharing_common_lib.labels.app" $ | nindent 6 }}
      app.kubernetes.io/stage: {{ .name }}
  serviceName: {{ $stage }}-headless
  template:
    metadata:
      labels: {{ include "edusharing_common_lib.labels.app" $ | nindent 8 }}
        app.kubernetes.io/stage: {{ .name }}
      annotations:
        checksum/configmap-env: {{ include (print $.Template.BasePath "/configmap-env.yaml") $ | sha256sum | trunc 63 }}
        checksum/secret-env: {{ include (print $.Template.BasePath "/secret-env.yaml") $ | sha256sum | trunc 63 }}
        {{- if not $.Values.global.metrics.servicemonitor.enabled }}
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8081"
        prometheus.io/scrape: {{ $.Values.config.metrics.enabled | quote }}
        {{- end }}
        sidecar.istio.io/inject: {{ $.Values.global.cluster.istio.enabled | quote }}
        {{- with merge $.Values.podAnnotations $.Values.global.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: {{ include "edusharing_common_lib.names.name" $ }}
        image: {{ include "edusharing_common_lib.images.image" $ }}{{ $.Values.image.name }}:{{ $.Values.image.tag }}
        imagePullPolicy: {{ $.Values.global.image.pullPolicy }}
        env:
        - name: REPOSITORY_SEARCH_ELASTIC_INDEX_HOST
          value: {{ printf "%s-stage-%s" $.Values.config.search.elastic.host .name | quote }}
        - name: SPRING_APPLICATION_JSON
          value: {{ .spec.config.override | quote }}
        envFrom:
        - configMapRef:
            name: {{ include "edusharing_common_lib.names.name" $ }}-env
        - secretRef:
            name: {{ include "edusharing_common_lib.names.name" $ }}-env
        {{- if or (.Values.config.tracker.customScript) (.Values.config.tracker.customSynonyms) }}
        volumeMounts:
        {{- end }}
        {{- if .Values.config.tracker.customScript }}
          - name: script
            mountPath: /opt/alfresco/scripts/script.groovy
            subPath: script.groovy
            readOnly: true
        {{- end }}
        {{- if .Values.config.tracker.customSynonyms }}
          - name: synonyms
            mountPath: /opt/alfresco/synonyms/synonyms.txt
            subPath: synonyms.txt
            readOnly: true
        {{- end }}
        ports:
        - name: management
          containerPort: 8081
        {{- if default $.Values.global.debug $.Values.debug }}
        - name: jpda
          containerPort: 5005
        {{- end }}
        {{- with $.Values.startupProbe }}
        startupProbe:
          httpGet:
            path: /actuator/health/readiness
            port: management
          failureThreshold: {{ .failureThreshold }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
        {{- end }}
        {{- with $.Values.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: management
          failureThreshold: {{ .failureThreshold }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          timeoutSeconds: {{ .timeoutSeconds }}
        {{- end }}
        {{- with $.Values.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: management
          failureThreshold: {{ .failureThreshold }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
          timeoutSeconds: {{ .timeoutSeconds }}
        {{- end }}
        {{- with $.Values.resources }}
        resources: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with $.Values.securityContext }}
        securityContext: {{ toYaml . | nindent 10 }}
        {{- end }}
      {{- if .spec.config.tracker.customScript }}
      volumes:
      - configMap:
          name: {{ include "edusharing_common_lib.names.name" $ }}-script-{{ .name }}
        name: script
      {{- end }}
      {{- if .spec.config.tracker.customSynonyms }}
      volumes:
        - configMap:
            name: {{ include "edusharing_common_lib.names.name" $ }}-synonyms-{{ .name }}
          name: synonyms
      {{- end }}
      {{- with $.Values.global.image.pullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with merge $.Values.podSecurityContext $.Values.global.security }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{ with $.Values.terminationGracePeriod }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with $.Values.nodeAffinity }}
      affinity:
        nodeAffinity: {{ toYaml . | nindent 10 }}
      {{- end }}
{{- end }}
{{- end }}